package com.pan.codegen.meta;

import org.apache.commons.lang3.StringUtils;

import java.util.HashSet;
import java.util.Set;

/**
 * 要生成类信息
 *
 * @author panjb
 */
public class ClassMeta {

    private final String pkg;
    private final String description;
    private final String author;
    private final String name;
    private final Set<FieldMeta> fields;
    private final Set<String> imports;

    private ClassMeta(Builder builder) {
        this.pkg = builder.pkg;
        this.description = builder.description;
        this.author = builder.author;
        this.name = builder.name;
        this.fields = builder.fields;
        this.imports = builder.imports;
    }

    public String getPkg() {
        return pkg;
    }

    public String getDescription() {
        return description;
    }

    public String getAuthor() {
        return author;
    }

    public String getName() {
        return name;
    }

    public Set<FieldMeta> getFields() {
        return fields;
    }

    public Set<String> getImports() {
        return imports;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static class Builder {
        private final static String PKG_LANG = "java.lang";
        private String pkg;
        private String description = "Code generated by automation";
        private String author = "Code Generator";
        private String name;
        private final Set<FieldMeta> fields = new HashSet<>();
        private final Set<String> imports = new HashSet<>();

        private Builder() {
        }

        public Builder pkg(String pkg) {
            this.pkg = pkg;
            return this;
        }

        public Builder description(String description) {
            this.description = description;
            return this;
        }

        public Builder author(String author) {
            this.author = author;
            return this;
        }

        public Builder name(String name) {
            this.name = name;
            return this;
        }

        public Builder addField(Class<?> type, String name) {
            String fieldType = type.getName();
            String typeImport = fieldType;
            if (type.isPrimitive() || fieldType.startsWith(PKG_LANG)) {
                typeImport = null;
            }
            String typeName = fieldType.substring(fieldType.lastIndexOf(".") + 1);
            return addField(typeName, name, typeImport);
        }

        public Builder addField(String type, String name) {
            addField(type, name, null);
            return this;
        }

        public Builder addImport(String typeImport) {
            this.imports.add(typeImport);
            return this;
        }

        public Builder addField(String type, String name, String typeImport) {
            FieldMeta fieldMeta = FieldMeta.of(type, name);
            if (StringUtils.isNotBlank(typeImport)) {
                this.imports.add(typeImport);
            }
            this.fields.add(fieldMeta);
            return this;
        }

        public ClassMeta build() {
            return new ClassMeta(this);
        }
    }
}
